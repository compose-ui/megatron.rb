.tick-label {
  display: flex;
  position: relative;
  font-size: 15px;
  padding-top: 10px;

  flex-direction: row;
  align-items: center;
  margin-bottom: 5px;

  // Radios & checkboxes
  input[type=radio],
  input[type=checkbox] {
    position: absolute;
    border: none;
    cursor: pointer;
    opacity: 0;

    // Element styled to replace checkbox or radio button
    + .tick {
      width: 20px;
      height: 20px;
      margin: 0 8px 0 0;
      background: $white;
      transition-property: box-shadow;
      box-shadow: input-shadow(), $empty-shadow inset;
    }

    @include input-active {
      border: none;

      + .tick { box-shadow: input-shadow( $steel ), $empty-shadow inset; }
    }


    &:disabled {
      pointer-events: none;
      cursor: default;
      color: $isabella;

      + .tick {
        box-shadow: 0 0 0 1px $alabaster inset;
      }
    }
  }

  input[type=radio] {

    // Unchecked
    + .tick {
      border-radius: 50%;
      position: relative;

      &:before, &:after {
        content: '';
        background-color: white;
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        border-radius: 50%;
        box-shadow: 0 0 0 transparent;
        transform: scale(0);
        transition-property: box-shadow, transform;
      }

      &:before { background-color: $alabaster; }
    }

    // Checked
    &:checked + .tick {
      box-shadow: input-shadow( darken($formBlue, 3) ), 0 0 0 8px $formBlue inset;

      &:after {
        box-shadow: 0 1px 0 2px darken($formBlue, 15);
        transform: scale(.35);
      }
    }

    // Hover, focus, active
    @include input-active {
      
      // Active Unchecked
      + .tick {
        &:before { transform: scale(.35); }
        &:after  { transform: scale(0);   }
      }

      // Active Checked
      &:checked + .tick {
        box-shadow: input-shadow( darken($formBlue, 15) ), 0 0 0 8px darken( $formBlue, 5 ) inset;

        &:before { transform: scale(0);   }
        &:after  { transform: scale(.35); }
      }
    }
  }

  // Checkboxes
  input[type=checkbox] {

    // Unchecked
    + .tick {
      border-radius: $radius;
      position: relative;

      &:before, &:after {
        content: '';
        position: absolute;
        left: -4px;
        top: 0px;
        width: 140%;
        height: 70%;
        margin: 10% 0 0 0;
        border: solid $white;
        border-width: 0 0 6px 6px;
        transition-property: transform, border-color;
        transform: scale(0) rotate(-50deg);
      }
    }

    // Checked
    &:checked + .tick {
      box-shadow: input-shadow( darken($formBlue, 3) ), 0 0 0 10px $formBlue inset;

      &:after, &:before {
        transform: scale(.5) rotate(-50deg);
      }

      &:before {
        top: 1px;
        opacity: 1;
        border-color: darken( $formBlue, 10 );
      }
    }

    // Hover, focus, active
    @include input-active {
      
      // Active Uncheked
      + .tick:before {
        border-color: $alabaster;
        transform: scale(.4) rotate(-50deg);
      }

      // Active Checked
      &:checked + .tick {
        box-shadow: input-shadow( darken($formBlue, 15) ), 0 0 0 10px darken( $formBlue, 5 ) inset;

        &:before {
          top: 1px;
          opacity: 1;
          transform: scale(.5) rotate(-50deg);
          border-color: darken( $formBlue, 10 );
        }
      }
    }
  }
}
