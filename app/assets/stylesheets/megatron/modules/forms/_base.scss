$text-inputs: 'textarea, input[type=url], input[type=tel], input[type=text], input[type=email], input[type=number], input[type=password]';

$steel:     #58728a; // Blue-Gray
$caribbean: #25c894; // Mint
$rusty:     #dd2f41; // Red
$alabaster: #c3d4e4; // Light Blue
$isabella:  #dde8eb; // Off-Cream
$duration: .2s;
$radius: 0px;

// Inputs
input,
select,
textarea {
  width: 100%;
  font-size: 16px;
  line-height: vr(2); // 30px
  padding: 9px 12px;
  border: 1px solid $alabaster;
  border-radius: $radius;
  transition: border-color $duration;
  appearance: none;

  // Keep Chrome’s autofilled fields white
  &:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 1000px $white inset;
  }

  &:hover,
  &:focus:not(select),
  &:focus:not(input[type=range]),
  &:active {
    border: 1px solid $steel;
    outline: 0;
  }

  // // Required styling
  // &:required + span:after {
  //   @extend %required-input;
  // }

  &:disabled:not([type="submit"]) {
    color: $isabella;
    cursor: default;
  }
}

// Bare inputs
:not(label) > {
  input,
  select,
  textarea {
    margin-bottom: 10px;
  }
}

// Override default search styling
input[type=search] {
  &,
  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button {
    -webkit-appearance: none;
  }
}

// Confine resizing of textareas
textarea {
  display: block;
  resize: vertical;
  max-height: vr(20) + 5px; // 305px
  min-height: vr(8) + 5px;  // 125px;
}

/* ===================================== *
 * iv. Select
 * ------------------------------------- */

// Select inputs
select {
  height: 50px;
  cursor: pointer;
  background: $white url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 7 14'%3E%3Cpolygon fill='%237A7B7C' points='3.5,0 0,6 7,6'/%3E%3Cpolygon fill='%237A7B7C' points='3.5,14 0,8 7,8'/%3E%3C/svg%3E") calc(100% - 14px) 50% / 7px 14px no-repeat;
}
form {
  width: 100%;

  &.max {
    max-width: 100%;
  }

  fieldset {
    padding: 0;
    border: 0;
  }
}

label {
  font-size: 15px;
}

form, .form-width {
  max-width: 700px;
}

.form-row {
  margin: .8em 0;
  &.split {
    margin-top: 1.3em;
    padding-top: .5em;
    border-top: 1px solid $page-border;
    box-shadow: #fff 0 1px inset;
  }
}

// Remove default fieldset styles
fieldset {
  border: 0;
  padding: 0;
  margin-left: 0;
  margin-right: 0;
}

// Fieldset legends
legend {
  font-size: 14px;
  letter-spacing: .02em;
  font-weight: 700;
  padding-top: 11px;
  box-shadow: 0 1px $alabaster;
  width: 100%;
  margin-bottom: 19px;
}

// Placeholder text color
::placeholder {
  opacity: 1;
}

// Remove FF’s default input outline
input::-moz-focus-inner {
  border: 0;
}

// Labels
.label-wrapper {
  $size: normal;

  // Scoped variables
  $font-size: if($size == large,  17px,  16px);
  $padding-y: if($size == large,  12px,   9px);
  $padding-x: if($size == large,  14px,  12px);
  $margin:    if($size == large,  19px,  25px);
  $distance:  if($size == large, -24px, -22px);
  $scale:     if($size == large,  .824,  .875);
  $height:    if($size == large,  56px,  50px);

  display: flex;
  flex-direction: column;
  position: relative;
  font-size: 15px;
  padding-top: 10px;
  margin-bottom: 10px;


  padding: 0;
  clear: both;
  flex: 1 0 auto;
  background: #fff;
  font-size: $font-size;
  margin-bottom: $margin;

  &:not(.valid):not(.invalid) > {
    textarea,
    #{$text-inputs} {
      &:focus + span,
      &:active + span {
        color: darken($steel, 10);
      }
    }
  }

  input,
  select,
  textarea {
    width: 100%;
    font-size: 16px;
    line-height: vr(2); // 30px
    padding: 9px 12px;
    border: 1px solid $alabaster;
    border-radius: $radius;
    transition: border-color .2s;
    appearance: none;

    // Keep Chrome’s autofilled fields white
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0 1000px $white inset;
    }

    &:hover,
    &:focus:not(select),
    &:focus:not(input[type=range]),
    &:active {
      border: 1px solid $steel;
      outline: 0;
    }

    // // Required styling
    // &:required + span:after {
    //   @extend %required-input;
    // }

    &:disabled:not([type="submit"]) {
      color: $isabella;
      cursor: default;
    }
  }

  &.valid > { textarea, #{$text-inputs} {

    // Non-required active color 
    &:not(:required):focus + span, &:not(:required):active + span {
      color: darken($steel, 10);
    }

    // Required active color
    &:required + span { 
      color: $caribbean;
    }

  }}

  // Invalidated label
  &.invalid > { textarea, #{$text-inputs} {

    // Non-required active color
    &:not(:required):focus + span,
    &:not(:required):active + span {
      color: darken($steel, 10);
    }

    // Required active color
    &:required + span {
      color: $rusty;
    }

  }}

  // Nested text-based inputs
  > input,
  > select,
  > textarea {
    margin-top: 5px;
  }

  // Nested range inputs
  > input[type=range] {
    margin-top: 12px;
    margin-bottom: 5px;
  }

  // Hide input placeholder text
  ::placeholder {
    opacity: 0;
    color: transparent;
  }

  textarea, #{$text-inputs} {
    z-index: 1;
    margin: 0;
    font-size: $font-size;
    line-height: inherit;
    background: transparent;
    padding: $padding-y $padding-x;

    // Move labels out of the way on focus and empty
    &:focus + .label-placeholder,
    &:active + .label-placeholder,
    &:not([value=""]) + .label-placeholder, {
      z-index: 2;
      transform: translate3d(0, $distance, 0) scale($scale);
    }
  }

  // Faux-placeholder labels
  .label-placeholder {
    background: #fff;
    box-shadow:
      -6px 0 $white,
       6px 0 $white;
    font-size: inherit;
    height: vr(2); // 30px
    position: absolute;
    top: $padding-y;
    left: $padding-x;
    padding: 1px 0 0 1px;
    transform-origin: left top 0;
    will-change: transform;
    -webkit-filter: blur(0);
    backface-visibility: hidden;
    -webkit-font-smoothing: subpixel-antialiased;
    z-index: 0;
    color: $alabaster;
    transform: translate3d(0, 0, 0) scale(1);
    transition: 
      z-index $duration,
      color $duration,
      transform $duration;
  }
}

textarea, #{$text-inputs}, select {

  // strip default styling
  &:invalid {
    outline: 0;
    box-shadow: none;
  }

  // apply valid state color to required fields & adjacent labels
  &.valid:required,
  .valid &:required {
    color: $caribbean;
  }

  // apply valid state to required fields
  &.valid:required,
  .valid &:required   {
    border-color: $caribbean;
  }

  // apply invalid state color to required fields & adjacent labels
  &.invalid:required,
  .invalid &:required {
    color: $rusty;
  }

  // apply invalid state to required fields
  &.invalid:required,
  .invalid &:required {
    border-color: $rusty;
  }

  // apply valid state to chrome’s autofilled fields
  &.valid:required:-webkit-autofill,
  .valid &:required:-webkit-autofill {
    -webkit-text-fill-color: $caribbean;
  }

  // apply invalid state to chrome’s autofilled fields
  &.invalid:required::-webkit-autofill,
  .invalid &:required::-webkit-autofill {
    -webkit-text-fill-color: $rusty;
  }
}
// validation message animation declaration
@keyframes scale-fade-in {
  0% {
    opacity: 0;
    transform: translate(-50%, -6px) scale(.5);
  }

  100% {
    opacity: 1;
    transform: translate(-50%, 6px) scale(1);
  }
}

// inline validation messages
.validation-message {
  position: absolute;
  left: 50%;
  top: 100%;
  width: 325px;
  max-width: 100vw;
  z-index: 3;
  text-align: center;
  transform: translate(-50%, 6px) scale(1);
  transform-origin: center top;
  animation: scale-fade-in $duration ease-out;

  // message bubble (also a hack to maintain proper word wrap)
  p {
    display: inline-block;
    margin: 0;
    padding: 12px 18px;
    border-radius: $radius;
    background: $rusty;
    color: $white;
    font-size: 14px;
    line-height: 21px;

    // message bubble triangle
    &:before {
      content: '';
      position: absolute;
      left: 50%;
      margin-left: -6px;
      bottom: 100%;
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 0 6px 6px 6px;
      border-color: transparent transparent $rusty transparent;
    }
  }
}
